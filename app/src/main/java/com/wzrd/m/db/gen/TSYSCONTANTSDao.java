package com.wzrd.m.db.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.wzrd.m.been.TSYSCONTANTS;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TSYSCONTANTS".
*/
public class TSYSCONTANTSDao extends AbstractDao<TSYSCONTANTS, String> {

    public static final String TABLENAME = "TSYSCONTANTS";

    /**
     * Properties of entity TSYSCONTANTS.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property T_sys_id = new Property(0, String.class, "t_sys_id", true, "T_SYS_ID");
        public final static Property T_sys_userid = new Property(1, String.class, "t_sys_userid", false, "T_SYS_USERID");
        public final static Property T_sys_contacts_name = new Property(2, String.class, "t_sys_contacts_name", false, "T_SYS_CONTACTS_NAME");
        public final static Property T_sys_contacts_id = new Property(3, String.class, "t_sys_contacts_id", false, "T_SYS_CONTACTS_ID");
        public final static Property T_sys_userphone = new Property(4, String.class, "t_sys_userphone", false, "T_SYS_USERPHONE");
        public final static Property T_sys_usericonpath = new Property(5, String.class, "t_sys_usericonpath", false, "T_SYS_USERICONPATH");
        public final static Property T_sys_contactsconpath = new Property(6, String.class, "t_sys_contactsconpath", false, "T_SYS_CONTACTSCONPATH");
        public final static Property T_sys_modify_time = new Property(7, String.class, "t_sys_modify_time", false, "T_SYS_MODIFY_TIME");
        public final static Property T_sys_modify_id = new Property(8, String.class, "t_sys_modify_id", false, "T_SYS_MODIFY_ID");
    };


    public TSYSCONTANTSDao(DaoConfig config) {
        super(config);
    }
    
    public TSYSCONTANTSDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TSYSCONTANTS\" (" + //
                "\"T_SYS_ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: t_sys_id
                "\"T_SYS_USERID\" TEXT," + // 1: t_sys_userid
                "\"T_SYS_CONTACTS_NAME\" TEXT," + // 2: t_sys_contacts_name
                "\"T_SYS_CONTACTS_ID\" TEXT," + // 3: t_sys_contacts_id
                "\"T_SYS_USERPHONE\" TEXT," + // 4: t_sys_userphone
                "\"T_SYS_USERICONPATH\" TEXT," + // 5: t_sys_usericonpath
                "\"T_SYS_CONTACTSCONPATH\" TEXT," + // 6: t_sys_contactsconpath
                "\"T_SYS_MODIFY_TIME\" TEXT," + // 7: t_sys_modify_time
                "\"T_SYS_MODIFY_ID\" TEXT);"); // 8: t_sys_modify_id
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TSYSCONTANTS\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TSYSCONTANTS entity) {
        stmt.clearBindings();
 
        String t_sys_id = entity.getT_sys_id();
        if (t_sys_id != null) {
            stmt.bindString(1, t_sys_id);
        }
 
        String t_sys_userid = entity.getT_sys_userid();
        if (t_sys_userid != null) {
            stmt.bindString(2, t_sys_userid);
        }
 
        String t_sys_contacts_name = entity.getT_sys_contacts_name();
        if (t_sys_contacts_name != null) {
            stmt.bindString(3, t_sys_contacts_name);
        }
 
        String t_sys_contacts_id = entity.getT_sys_contacts_id();
        if (t_sys_contacts_id != null) {
            stmt.bindString(4, t_sys_contacts_id);
        }
 
        String t_sys_userphone = entity.getT_sys_userphone();
        if (t_sys_userphone != null) {
            stmt.bindString(5, t_sys_userphone);
        }
 
        String t_sys_usericonpath = entity.getT_sys_usericonpath();
        if (t_sys_usericonpath != null) {
            stmt.bindString(6, t_sys_usericonpath);
        }
 
        String t_sys_contactsconpath = entity.getT_sys_contactsconpath();
        if (t_sys_contactsconpath != null) {
            stmt.bindString(7, t_sys_contactsconpath);
        }
 
        String t_sys_modify_time = entity.getT_sys_modify_time();
        if (t_sys_modify_time != null) {
            stmt.bindString(8, t_sys_modify_time);
        }
 
        String t_sys_modify_id = entity.getT_sys_modify_id();
        if (t_sys_modify_id != null) {
            stmt.bindString(9, t_sys_modify_id);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TSYSCONTANTS entity) {
        stmt.clearBindings();
 
        String t_sys_id = entity.getT_sys_id();
        if (t_sys_id != null) {
            stmt.bindString(1, t_sys_id);
        }
 
        String t_sys_userid = entity.getT_sys_userid();
        if (t_sys_userid != null) {
            stmt.bindString(2, t_sys_userid);
        }
 
        String t_sys_contacts_name = entity.getT_sys_contacts_name();
        if (t_sys_contacts_name != null) {
            stmt.bindString(3, t_sys_contacts_name);
        }
 
        String t_sys_contacts_id = entity.getT_sys_contacts_id();
        if (t_sys_contacts_id != null) {
            stmt.bindString(4, t_sys_contacts_id);
        }
 
        String t_sys_userphone = entity.getT_sys_userphone();
        if (t_sys_userphone != null) {
            stmt.bindString(5, t_sys_userphone);
        }
 
        String t_sys_usericonpath = entity.getT_sys_usericonpath();
        if (t_sys_usericonpath != null) {
            stmt.bindString(6, t_sys_usericonpath);
        }
 
        String t_sys_contactsconpath = entity.getT_sys_contactsconpath();
        if (t_sys_contactsconpath != null) {
            stmt.bindString(7, t_sys_contactsconpath);
        }
 
        String t_sys_modify_time = entity.getT_sys_modify_time();
        if (t_sys_modify_time != null) {
            stmt.bindString(8, t_sys_modify_time);
        }
 
        String t_sys_modify_id = entity.getT_sys_modify_id();
        if (t_sys_modify_id != null) {
            stmt.bindString(9, t_sys_modify_id);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public TSYSCONTANTS readEntity(Cursor cursor, int offset) {
        TSYSCONTANTS entity = new TSYSCONTANTS( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // t_sys_id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // t_sys_userid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // t_sys_contacts_name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // t_sys_contacts_id
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // t_sys_userphone
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // t_sys_usericonpath
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // t_sys_contactsconpath
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // t_sys_modify_time
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8) // t_sys_modify_id
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TSYSCONTANTS entity, int offset) {
        entity.setT_sys_id(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setT_sys_userid(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setT_sys_contacts_name(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setT_sys_contacts_id(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setT_sys_userphone(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setT_sys_usericonpath(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setT_sys_contactsconpath(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setT_sys_modify_time(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setT_sys_modify_id(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
     }
    
    @Override
    protected final String updateKeyAfterInsert(TSYSCONTANTS entity, long rowId) {
        return entity.getT_sys_id();
    }
    
    @Override
    public String getKey(TSYSCONTANTS entity) {
        if(entity != null) {
            return entity.getT_sys_id();
        } else {
            return null;
        }
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
